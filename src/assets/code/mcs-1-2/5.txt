#[tokio::main]
async fn main() -> anyhow::Result<()> {
    tracing_subscriber::registry()
        .with(tracing_subscriber::fmt::layer())
        // 只显示 INFO 及更高级别的日志
        .with(LevelFilter::INFO)
        .init();

    tracing::info!("色麦块认证服务器~");
    tracing::info!("正在连接数据库...");
    let db: Result<PrismaClient, NewClientError> = PrismaClient::_builder().build().await;
    let db = match db {
        Ok(v) => v,
        Err(e) => {
            tracing::error!("无法连接到数据库: {}", e);
            return Err(anyhow::Error::new(e));
        }
    };
    tracing::info!("正在合并数据库...");
    match db._db_push().await {
        Ok(v) => {
            tracing::info!("合并了 {} 个对象, 数据库已经是最新的啦", v);
        }
        Err(e) => {
            tracing::error!("数据库合并失败: {}", e);
            return Err(anyhow::Error::new(e));
        }
    };

    let app = Router::new()
        .route("/", routing::get(index))
        .layer(TraceLayer::new_for_http());

    let listener = TcpListener::bind("127.0.0.1:2345").await.unwrap();
    tracing::info!("认证服务器正在监听 {}", listener.local_addr().unwrap());

    axum::serve(listener, app).await.unwrap();
    Ok(())
}
