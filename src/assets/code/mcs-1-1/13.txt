// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// 数据库的 binding 将存放在 ../src/prisma.rs
generator client {
  provider = "cargo prisma"
  output   = "../src/prisma.rs"
}

// postgresql 数据源
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 可上传的材质类型, 参考以下链接
// https://github.com/yushijinhun/authlib-injector/wiki/Yggdrasil-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8A%80%E6%9C%AF%E8%A7%84%E8%8C%83#uploadabletextures-%E5%8F%AF%E4%B8%8A%E4%BC%A0%E7%9A%84%E6%9D%90%E8%B4%A8%E7%B1%BB%E5%9E%8B
enum UploadableTextures {
  SkinOnly
  SkinAndCape
  None
}

// 材质模型，可选值有：default、slim
// default：正常手臂宽度（4px）的皮肤
// slim：细手臂（3px）的皮肤
enum SkinType {
  Default
  Slim
}

// 用户的偏好语言
enum Language {
  ZH_CN
  EN
}

// 令牌的状态, 参考以下链接
// https://github.com/yushijinhun/authlib-injector/wiki/Yggdrasil-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8A%80%E6%9C%AF%E8%A7%84%E8%8C%83#%E4%BB%A4%E7%89%8C%E7%9A%84%E7%8A%B6%E6%80%81
enum TokenStatus {
  Available
  NeedRefresh
  Invalid
}

// 皮肤
model Skin {
  id        BigInt    @id @unique @default(autoincrement())
  hash      Bytes
  model     SkinType
  createdAt DateTime  @default(now())
  Profile   Profile[]
}

// 披风
model Cape {
  id        BigInt    @id @unique @default(autoincrement())
  hash      Bytes
  createdAt DateTime  @default(now())
  Profile   Profile[]
}

// 角色, 参考以下链接
// https://github.com/yushijinhun/authlib-injector/wiki/Yggdrasil-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8A%80%E6%9C%AF%E8%A7%84%E8%8C%83#%E8%A7%92%E8%89%B2profile
model Profile {
  id                 BigInt             @id @unique @default(autoincrement())
  uuid               Bytes              @unique
  owner              User               @relation(fields: [ownerID], references: [id])
  ownerID            BigInt
  displayName        String             @unique
  skin               Skin?              @relation(fields: [skinID], references: [id])
  skinID             BigInt?
  cape               Cape?              @relation(fields: [capeID], references: [id])
  capeID             BigInt?
  uploadableTextures UploadableTextures @default(SkinAndCape)
  createdAt          DateTime           @default(now())
  Token              Token[]
}

// 用户, 参考以下链接
// https://github.com/yushijinhun/authlib-injector/wiki/Yggdrasil-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8A%80%E6%9C%AF%E8%A7%84%E8%8C%83#%E7%94%A8%E6%88%B7
model User {
  id        BigInt    @id @unique @default(autoincrement())
  uuid      Bytes     @unique
  nickname  String
  email     String    @unique
  password  String
  language  Language  @default(ZH_CN)
  createdAt DateTime  @default(now())
  Profile   Profile[]
  Token     Token[]
  Setting   Setting?
}

// 令牌, 参考以下链接
// https://github.com/yushijinhun/authlib-injector/wiki/Yggdrasil-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8A%80%E6%9C%AF%E8%A7%84%E8%8C%83#%E4%BB%A4%E7%89%8Ctoken
model Token {
  id          BigInt        @id @unique @default(autoincrement())
  accessToken String        @unique
  clientToken String
  owner       User          @relation(fields: [ownerID], references: [id])
  ownerID     BigInt
  profile     Profile?      @relation(fields: [profileID], references: [id])
  profileID   BigInt?
  status      TokenStatus   @default(Available)
  createdAt   DateTime      @default(now())
  JoinRequest JoinRequest[]
}

// 服务器认证, 参考以下链接
// https://github.com/yushijinhun/authlib-injector/wiki/Yggdrasil-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8A%80%E6%9C%AF%E8%A7%84%E8%8C%83#%E4%BC%9A%E8%AF%9D%E9%83%A8%E5%88%86
model JoinRequest {
  id          BigInt   @id @unique @default(autoincrement())
  serverID    String   @unique
  token       Token    @relation(fields: [accessToken], references: [accessToken])
  accessToken String
  ip          String
  createdAt   DateTime @default(now())
}

// 用户设置
model Setting {
  id       BigInt    @id @unique @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id])
  userId   BigInt @unique
  maxToken BigInt @default(10)
}
