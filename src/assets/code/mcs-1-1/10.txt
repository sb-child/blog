$ cargo prisma
    Finished dev [unoptimized + debuginfo] target(s) in 0.57s
     Running `target/debug/prisma`
Downloading https://prisma-photongo.s3-eu-west-1.amazonaws.com/prisma-cli-4.8.0-linux-x64.gz to /home/sbchild/.cache/prisma/binaries/cli/4.8.0/prisma-cli-linux-x64
Downloading https://binaries.prisma.sh/all_commits/d6e67a83f971b175a593ccc12e15c4a757f93ffe/debian-openssl-3.0.x/query-engine.gz to /home/sbchild/.cache/prisma/binaries/cli/4.8.0/d6e67a83f971b175a593ccc12e15c4a757f93ffe/prisma-query-engine-debian-openssl-3.0.x
Downloading https://binaries.prisma.sh/all_commits/d6e67a83f971b175a593ccc12e15c4a757f93ffe/debian-openssl-3.0.x/migration-engine.gz to /home/sbchild/.cache/prisma/binaries/cli/4.8.0/d6e67a83f971b175a593ccc12e15c4a757f93ffe/prisma-migration-engine-debian-openssl-3.0.x
Downloading https://binaries.prisma.sh/all_commits/d6e67a83f971b175a593ccc12e15c4a757f93ffe/debian-openssl-3.0.x/introspection-engine.gz to /home/sbchild/.cache/prisma/binaries/cli/4.8.0/d6e67a83f971b175a593ccc12e15c4a757f93ffe/prisma-introspection-engine-debian-openssl-3.0.x
Downloading https://binaries.prisma.sh/all_commits/d6e67a83f971b175a593ccc12e15c4a757f93ffe/debian-openssl-3.0.x/prisma-fmt.gz to /home/sbchild/.cache/prisma/binaries/cli/4.8.0/d6e67a83f971b175a593ccc12e15c4a757f93ffe/prisma-prisma-fmt-debian-openssl-3.0.x

...

$ echo DATABASE_URL=postgresql://mcauth:password@127.0.0.1:5432/mcauth_db?schema=public > .env

$ cargo prisma init
    Finished dev [unoptimized + debuginfo] target(s) in 0.54s
     Running `target/debug/prisma init`

âœ” Your Prisma schema was created at prisma/schema.prisma
  You can now open it in your favorite editor.

warn Prisma would have added DATABASE_URL but it already exists in .env
warn You already have a .gitignore file. Don't forget to add `.env` in it to not commit any private information.

Next steps:
1. Set the DATABASE_URL in the .env file to point to your existing database. If your database has no tables yet, read https://pris.ly/d/getting-started
2. Set the provider of the datasource block in schema.prisma to match your database: postgresql, mysql, sqlite, sqlserver, mongodb or cockroachdb.
3. Run prisma db pull to turn your database schema into a Prisma schema.
4. Run prisma generate to generate the Prisma Client. You can then start querying your database.

More information in our documentation:
https://pris.ly/d/getting-started
